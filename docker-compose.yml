version: "3.8"

services:
  nextjs:
    ports:
      - 3000:3000
    build:
      context: ./
      dockerfile: Dockerfile
    volumes:
      - images:/usr/src/app/public/bilder
      - next:/usr/src/app/.next
    environment:
      - DATABASE_URL=mongodb://mongo:27017/db
      - PASSWORD=123
    
  mongo:
    image: mongo:7.0
    container_name: mongo
    command: ["--replSet", "rs0", "--bind_ip_all", "--port", "27017"]
    ports:
      - 27017:27017
    extra_hosts:
      - "host.docker.internal:host-gateway"
    healthcheck:
      test: echo "try { rs.status() } catch (err) { rs.initiate({_id:'rs0',members:[{_id:0,host:'host.docker.internal:27017',priority:1},{_id:1,host:'host.docker.internal:27018',priority:0.5},{_id:2,host:'host.docker.internal:27019',priority:0.5}]}) }" | mongosh --port 27017 --quiet
      interval: 5s
      timeout: 30s
      start_period: 0s
      retries: 30
    volumes:
      - "./data/originalData:/data/db"
      - "./data/originalData_config:/data/configdb"

  mongo2:
    image: mongo:7.0
    command: ["--replSet", "rs0", "--bind_ip_all", "--port", "27018"]
    ports:
      - 27018:27018
    extra_hosts:
      - "host.docker.internal:host-gateway"
    volumes:
      - "./data/mongo2_data:/data/db"
      - "./data/mongo2_config:/data/configdb"

  mongo3:
    image: mongo:7.0
    command: ["--replSet", "rs0", "--bind_ip_all", "--port", "27019"]
    ports:
      - 27019:27019
    extra_hosts:
      - "host.docker.internal:host-gateway"
    volumes:
      - "./data/mongo3_data:/data/db"
      - "./data/mongo3_config:/data/configdb"



volumes:
  images:
  next:
  originalData:
  mongo2_data:
  mongo3_data:
  originalData_config:
  mongo2_config:
  mongo3_config:

networks:
  default:
  common.network:
    driver: bridge
